name: Build and Release

on:
  push:
    branches:
      - master
  workflow_dispatch:


jobs:
  build:
    name: Build on ${{ matrix.architecture }} ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: [3.9]
        architecture: ['x64']

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile main.py

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: main-exe-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.architecture }}
        path: dist/main.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download all artifacts
      uses: actions/download-artifact@v2

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./main-exe-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.architecture }}
        asset_name: main-exe-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.architecture }}
        asset_content_type: application/octet-stream